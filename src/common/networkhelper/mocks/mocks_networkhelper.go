// Code generated by MockGen. DO NOT EDIT.
// Source: networkhelper.go

package mock_networkhelper

import (
	gomock "github.com/golang/mock/gomock"
	net "net"
	reflect "reflect"
)

// MockNetwork is a mock of Network interface
type MockNetwork struct {
	ctrl     *gomock.Controller
	recorder *MockNetworkMockRecorder
}

// MockNetworkMockRecorder is the mock recorder for MockNetwork
type MockNetworkMockRecorder struct {
	mock *MockNetwork
}

// NewMockNetwork creates a new mock instance
func NewMockNetwork(ctrl *gomock.Controller) *MockNetwork {
	mock := &MockNetwork{ctrl: ctrl}
	mock.recorder = &MockNetworkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockNetwork) EXPECT() *MockNetworkMockRecorder {
	return _m.recorder
}

// StartNetwork mocks base method
func (_m *MockNetwork) StartNetwork() {
	_m.ctrl.Call(_m, "StartNetwork")
}

// StartNetwork indicates an expected call of StartNetwork
func (_mr *MockNetworkMockRecorder) StartNetwork() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "StartNetwork", reflect.TypeOf((*MockNetwork)(nil).StartNetwork))
}

// CheckConnectivity mocks base method
func (_m *MockNetwork) CheckConnectivity() error {
	ret := _m.ctrl.Call(_m, "CheckConnectivity")
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckConnectivity indicates an expected call of CheckConnectivity
func (_mr *MockNetworkMockRecorder) CheckConnectivity() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CheckConnectivity", reflect.TypeOf((*MockNetwork)(nil).CheckConnectivity))
}

// GetOutboundIP mocks base method
func (_m *MockNetwork) GetOutboundIP() (string, error) {
	ret := _m.ctrl.Call(_m, "GetOutboundIP")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOutboundIP indicates an expected call of GetOutboundIP
func (_mr *MockNetworkMockRecorder) GetOutboundIP() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetOutboundIP", reflect.TypeOf((*MockNetwork)(nil).GetOutboundIP))
}

// GetIPs mocks base method
func (_m *MockNetwork) GetIPs() ([]string, error) {
	ret := _m.ctrl.Call(_m, "GetIPs")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIPs indicates an expected call of GetIPs
func (_mr *MockNetworkMockRecorder) GetIPs() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetIPs", reflect.TypeOf((*MockNetwork)(nil).GetIPs))
}

// GetMACAddress mocks base method
func (_m *MockNetwork) GetMACAddress() (string, error) {
	ret := _m.ctrl.Call(_m, "GetMACAddress")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMACAddress indicates an expected call of GetMACAddress
func (_mr *MockNetworkMockRecorder) GetMACAddress() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetMACAddress", reflect.TypeOf((*MockNetwork)(nil).GetMACAddress))
}

// GetNetInterface mocks base method
func (_m *MockNetwork) GetNetInterface() ([]net.Interface, error) {
	ret := _m.ctrl.Call(_m, "GetNetInterface")
	ret0, _ := ret[0].([]net.Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNetInterface indicates an expected call of GetNetInterface
func (_mr *MockNetworkMockRecorder) GetNetInterface() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "GetNetInterface", reflect.TypeOf((*MockNetwork)(nil).GetNetInterface))
}

// AppendSubscriber mocks base method
func (_m *MockNetwork) AppendSubscriber() chan []net.IP {
	ret := _m.ctrl.Call(_m, "AppendSubscriber")
	ret0, _ := ret[0].(chan []net.IP)
	return ret0
}

// AppendSubscriber indicates an expected call of AppendSubscriber
func (_mr *MockNetworkMockRecorder) AppendSubscriber() *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "AppendSubscriber", reflect.TypeOf((*MockNetwork)(nil).AppendSubscriber))
}
